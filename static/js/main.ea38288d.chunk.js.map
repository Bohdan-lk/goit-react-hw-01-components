{"version":3,"sources":["components/SocialProfile/Profile.module.css","components/FriendList/FriendsListItem.module.css","components/TransactionHistory/TransactionsHistory.module.css","components/TransactionHistory/TransactionsHistoryRow.module.css","components/Statistics/Statistic.module.css","components/Statistics/StatisticItem.module.css","components/FriendList/FriendsList.module.css","components/FriendList/FriendsListItem.js","components/FriendList/FriendsList.js","components/SocialProfile/Profile.js","components/Statistics/StatisticItem.js","components/Statistics/Statistic.js","components/TransactionHistory/TransactionsHistoryRow.js","components/TransactionHistory/TransactionsHistory.js","App.js","index.js"],"names":["module","exports","FriendsListItem","friend","isOnClass","isOnline","styles","isOn","isOff","className","item","avatars","src","avatar","alt","name","FriendsList","friends","length","list","map","key","id","defaultProps","Profile","user","profile","tag","location","statsList","statsItem","statsItemName","statsItemStat","stats","followers","views","likes","StatisticItem","stat","this","props","style","backgroundColor","Math","random","label","percent","percentage","React","Component","Statistic","title","statistics","TransactionsHistoryRow","transaction","textRow","text","type","amount","currency","TransactionsHistory","transactions","table","headRow","App","statistic","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea38288d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2Oz_i\",\"avatar\":\"Profile_avatar__2VfHP\",\"name\":\"Profile_name__66D6i\",\"tag\":\"Profile_tag__1A871\",\"location\":\"Profile_location__713li\",\"statsList\":\"Profile_statsList__2hnJp\",\"statsItem\":\"Profile_statsItem__1ie_6\",\"statsItemName\":\"Profile_statsItemName__mVpVC\",\"statsItemStat\":\"Profile_statsItemStat__23JPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsListItem_item__3h-P1\",\"name\":\"FriendsListItem_name__3OvUU\",\"avatars\":\"FriendsListItem_avatars__2eVYq\",\"status\":\"FriendsListItem_status__2d97o\",\"isOn\":\"FriendsListItem_isOn__2BqwP FriendsListItem_status__2d97o\",\"isOff\":\"FriendsListItem_isOff__SDb4U FriendsListItem_status__2d97o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionsHistory_table__2T48p\",\"headRow\":\"TransactionsHistory_headRow__s_udH\",\"title\":\"TransactionsHistory_title__QOM85\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TransactionsHistoryRow_text__3kOeo\",\"textRow\":\"TransactionsHistoryRow_textRow__FDodX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__AsRH4\",\"title\":\"Statistic_title__1b-sl\",\"list\":\"Statistic_list__384BQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticItem_item__15Fbv\",\"label\":\"StatisticItem_label__1HdGU\",\"percent\":\"StatisticItem_percent__mLpQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendsList_list__3-N12\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendsListItem.module.css';\r\n\r\nconst FriendsListItem = ({friend}) => {\r\n    const isOnClass = friend.isOnline ? styles.isOn : styles.isOff;\r\n\r\n    return (\r\n        <li className={styles.item}>\r\n            <span className={isOnClass}>{friend.isOnline}</span>\r\n            <img className={styles.avatars} src={friend.avatar} alt={friend.name}/>\r\n            <p className={styles.name}>{friend.name}</p>\r\n        </li>\r\n    );\r\n} ;\r\n\r\nFriendsListItem.propTypes = {\r\n    friend: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n    }).isRequired\r\n};\r\n\r\nexport default FriendsListItem;","import React from 'react';\r\nimport FriendsListItem from './FriendsListItem';\r\nimport styles from './FriendsList.module.css';\r\n\r\nconst FriendsList = ({ friends }) => (\r\n    friends.length > 0 ? (\r\n        <ul className={styles.list}>\r\n            {friends.map(friend => (\r\n                <FriendsListItem friend={friend} key={friend.id}/>\r\n            ))}\r\n        </ul>\r\n    ) : (\r\n        <p>No friends :(</p>\r\n    )\r\n);\r\n\r\nFriendsList.defaultProps = {\r\n    friends: [],\r\n};\r\n\r\nexport default FriendsList;","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profile = ({user}) => (\r\n    <div className={styles.profile}>\r\n        <img className={styles.avatar} src={user.avatar} alt={user.name}/>\r\n        <span className={styles.name}>{user.name}</span>\r\n        <span className={styles.tag}>@{user.tag}</span>\r\n        <span className={styles.location}>{user.location}</span>\r\n        <ul className={styles.statsList}>\r\n            <li className={styles.statsItem}>\r\n                <span className={styles.statsItemName}>Followers</span>\r\n                <span className={styles.statsItemStat}>{user.stats.followers}</span>\r\n            </li>\r\n            <li className={styles.statsItem}>\r\n                <span className={styles.statsItemName}>Views</span>\r\n                <span className={styles.statsItemStat}>{user.stats.views}</span>\r\n            </li>\r\n            <li className={styles.statsItem}>\r\n                <span className={styles.statsItemName}>Likes</span>\r\n                <span className={styles.statsItemStat}>{user.stats.likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n    user: PropTypes.shape({\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        tag: PropTypes.string.isRequired,\r\n        location: PropTypes.string.isRequired,\r\n        stats: PropTypes.shape({\r\n            followers: PropTypes.number.isRequired,\r\n            views: PropTypes.number.isRequired,\r\n            likes: PropTypes.number.isRequired,\r\n        }).isRequired,\r\n    }).isRequired\r\n};\r\n\r\nexport default Profile;","import React     from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles    from \"./StatisticItem.module.css\";\r\n\r\nclass StatisticItem extends React.Component {\r\n    render() {\r\n        let {stat} = this.props;\r\n        const randColor = () => \"HSL(\" + 860 * Math.random() + ',' + (35 + 95 * Math.random()) + '%,' + (70 + 20 * Math.random()) + '%)';\r\n\r\n        return (\r\n            <li style={{backgroundColor: randColor()}} className={styles.item}>\r\n                <span className={styles.label}>{stat.label}</span>\r\n                <span className={styles.percent}>{stat.percentage}%</span>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nStatisticItem.propTypes = {\r\n    stat: PropTypes.shape({\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n    }).isRequired\r\n};\r\n\r\nexport default StatisticItem;","import React         from 'react';\r\nimport PropTypes     from 'prop-types';\r\nimport styles        from './Statistic.module.css';\r\nimport StatisticItem from './StatisticItem';\r\n\r\nclass Statistic extends React.Component {\r\n    render() {\r\n        let {title, stats} = this.props;\r\n        return (\r\n            <section className={ styles.statistics }>\r\n                { title ? (\r\n                    <h2 className={ styles.title }>{ title }</h2>\r\n                ) : (\r\n                    ''\r\n                ) }\r\n                <ul className={ styles.list }>\r\n                    { stats.map( stat => (\r\n                        <StatisticItem stat={ stat } key={ stat.id }/>\r\n                    ) ) }\r\n                </ul>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nStatistic.propTypes = {\r\n    title : PropTypes.string,\r\n    stats : PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistic;","import React               from 'react';\r\nimport PropTypes, {string} from 'prop-types';\r\nimport styles              from \"./TransactionsHistoryRow.module.css\";\r\n\r\nconst TransactionsHistoryRow = ({transaction}) => (\r\n    <tr className={styles.textRow}>\r\n        <td className={styles.text}>{transaction.type}</td>\r\n        <td className={styles.text}>{transaction.amount}</td>\r\n        <td className={styles.text}>{transaction.currency}</td>\r\n    </tr>\r\n);\r\n\r\nTransactionsHistoryRow.propTypes = {\r\n    transaction: PropTypes.shape({\r\n        type: string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n    }).isRequired\r\n};\r\n\r\nexport default TransactionsHistoryRow;","import React                  from 'react';\r\nimport PropTypes              from 'prop-types';\r\nimport styles                 from './TransactionsHistory.module.css';\r\nimport TransactionsHistoryRow from \"./TransactionsHistoryRow\";\r\n\r\nconst TransactionsHistory = ({transactions}) => (\r\n    <table className={styles.table}>\r\n        <thead>\r\n        <tr className={styles.headRow}>\r\n            <th className={styles.title}>Type</th>\r\n            <th className={styles.title}>Amount</th>\r\n            <th className={styles.title}>Currency</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {transactions.map(transaction => (\r\n            <TransactionsHistoryRow transaction={transaction} key={transaction.id}/>\r\n        ))}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nTransactionsHistory.propTypes = {\r\n    transactions:PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TransactionsHistory;","import React from 'react';\nimport FriendsList from \"./components/FriendList/FriendsList\";\nimport Profile from './components/SocialProfile/Profile';\nimport Statistic from './components/Statistics/Statistic';\nimport TransactionsHistory from './components/TransactionHistory/TransactionsHistory';\nimport friends from './data/friends';\nimport user from './data/user';\nimport statistic from './data/statistic';\nimport transactions from './data/transactions';\n\nconst App = () => (\n    <>\n        <FriendsList friends={friends} />\n        <Profile user={user}/>\n        <Statistic stats={statistic} title={'Upload stats'}/>\n        <TransactionsHistory transactions={transactions}/>\n    </>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}